#!/bin/bash

# Get the current git tag
CURRENT_TAG=$(git describe --tags --exact-match 2>/dev/null)

# Define the regular expression for the desired tag pattern
TAG_PATTERN="^rel-[0-9]+\.[0-9]+\.[0-9]+$"

# Check if the current tag matches the pattern
if [[ $CURRENT_TAG =~ $TAG_PATTERN ]]; then
    echo "Tag $CURRENT_TAG matches the pattern."
    export TAG_MATCHES=true
else
    echo "Tag $CURRENT_TAG does not match the pattern."
    export TAG_MATCHES=false
fi

# Export the variable for use in the Buildkite pipeline
echo "export TAG_MATCHES=$TAG_MATCHES" >> "$BUILDKITE_ENV_FILE"


fetch count("builtin:kubernetes.pod.count")
from entities
where entitySelector = "type(KUBERNETES_CLUSTER)"

type("KUBERNETES_POD"),managementZone("flshub")

type(CLOUD_APPLICATION_INSTANCE),toRelationships.isClusterOfCai(type(KUBERNETES_CLUSTER),entityName.in("<YOUR KUBERNETES CLUSTER NAME>"))
type(KUBERNETES_POD),kubernetes.cluster.name("flshub*")

kubectl get pods --all-namespaces -l app=prometheus
kubectl get deployments --all-namespaces -l app=prometheus
kubectl get statefulsets --all-namespaces -l app=prometheus
kubectl get services --all-namespaces -l app=prometheus
kubectl get crd | grep prometheus
helm list --all-namespaces | grep prometheus

prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
    metrics.dynatrace.com/scrape: 'true'
    metrics.dynatrace.com/path: '/metrics'
    metrics.dynatrace.com/port: '8080'
    metrics.dynatrace.com/secure: 'false'


heartbeat.monitors:
    - type: http
      id: my-secure-site
      name: My Secure Website
      urls: ["https://example.com"]
      schedule: '@every 10s'
      check.response.status: 200
      ssl.verification_mode: full
      ssl.certificate_authorities: ["/secrets/test-nsp/certificates/private/ca.pem"] # Path to CA certificate file
      ssl.certificate: "/secrets/test-nsp/certificates/private/cert.pem" # Path to client certificate file
      ssl.key: "/secrets/test-nsp/certificates/private/cert.key" # Path to client key file
      ssl.supported_protocols: ["TLSv1.2", "TLSv1.3"] # Supported SSL/TLS versions

builtin:kubernetes.pods:filter(eq("kubernetes.cluster.name", "<Your_Cluster_Name>"))

builtin:kubernetes.pods:filter(eq(dt.kubernetes.cluster.name,"<CLUSTER_NAME>")):splitBy(k8s.pod.name):count

builtin:containers.memory.usagePercent:splitBy("dt.entity.container_group_instance")


https://stackoverflow.com/questions/67057913/adding-count-to-terraform-module

https://github.com/hashicorp/terraform/issues/26809

builtin:kubernetes.container.restart:filter(and(ne(k8s.cluster.name,"<CLUSTER_NAME_TO_IGNORE>"))):splitBy(k8s.cluster.name):sum

builtin:kubernetes.container.restart:filter(and(or(ne(k8s.cluster.name,"prod-cluster"),ne(k8s.namespace.name,"test-namespace")))):splitBy(k8s.cluster.name,k8s.namespace.name):sum

